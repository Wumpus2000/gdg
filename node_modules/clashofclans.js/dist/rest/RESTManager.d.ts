import { RequestHandler } from './RequestHandler';
import { Util } from '../util/Util';
import { APIClan, APIClanList, APIClanMemberList, APIClanRankingList, APIClanVersusRankingList, APIClanWar, APIClanWarLeagueGroup, APIClanWarLog, APIGoldPassSeason, APILabelList, APILeague, APILeagueList, APILeagueSeasonList, APILocation, APILocationList, APIPlayer, APIPlayerRankingList, APIPlayerSeasonRankingList, APIPlayerVersusRankingList, APIVerifyToken, APIWarLeague, APIWarLeagueList, SearchOptions, ClanSearchOptions, RESTOptions, OverrideOptions, LoginOptions } from '../types';
/** Represents a REST Manager of the client. */
export declare class RESTManager {
    /** Request Handler for the RESTManager. */
    readonly handler: RequestHandler;
    constructor(options?: RESTOptions);
    /** Contains various general-purpose utility methods. */
    get util(): typeof Util;
    /**
     * Initialize the client to create keys.
     * @example
     * ```
     * const rest = new RESTManager();
     * rest.login({ email: 'developer@email.com', password: '***' });
     * ```
     */
    login(options: LoginOptions): Promise<string[]>;
    /** Set Clash of Clans API keys. */
    setKeys(keys: string[]): this;
    /** Search all clans by name and/or filtering the results using various criteria. */
    getClans(query: ClanSearchOptions, options?: OverrideOptions): Promise<import("../types").Response<APIClanList>>;
    /** Get info about a clan. */
    getClan(clanTag: string, options?: OverrideOptions): Promise<import("../types").Response<APIClan>>;
    /** Get list of clan members. */
    getClanMembers(clanTag: string, options?: SearchOptions): Promise<import("../types").Response<APIClanMemberList>>;
    /** Get clan war log. */
    getClanWarLog(clanTag: string, options?: SearchOptions): Promise<import("../types").Response<APIClanWarLog>>;
    /** Get info about currently running war in the clan. */
    getCurrentWar(clanTag: string, options?: OverrideOptions): Promise<import("../types").Response<APIClanWar>>;
    /** Get info about clan war league. */
    getClanWarLeagueGroup(clanTag: string, options?: OverrideOptions): Promise<import("../types").Response<APIClanWarLeagueGroup>>;
    /** Get info about a CWL round by WarTag. */
    getClanWarLeagueRound(warTag: string, options?: OverrideOptions): Promise<import("../types").Response<APIClanWar>>;
    /** Get info about a player by tag. */
    getPlayer(playerTag: string, options?: OverrideOptions): Promise<import("../types").Response<APIPlayer>>;
    /** Verify Player API token that can be found from the Game settings. */
    verifyPlayerToken(playerTag: string, token: string, options?: OverrideOptions): Promise<import("../types").Response<APIVerifyToken>>;
    /** Get list of Leagues. */
    getLeagues(options?: SearchOptions): Promise<import("../types").Response<APILeagueList>>;
    /** Get a League info. */
    getLeague(leagueId: string | number, options?: OverrideOptions): Promise<import("../types").Response<APILeague>>;
    /** Get Legend League season Ids. */
    getLeagueSeasons(leagueId: number, options?: SearchOptions): Promise<import("../types").Response<APILeagueSeasonList>>;
    /** Get Legend League season rankings by season Id. */
    getSeasonRankings(leagueId: number, seasonId: string, options?: SearchOptions): Promise<import("../types").Response<APIPlayerSeasonRankingList>>;
    /** Get list of Clan War Leagues. */
    getWarLeagues(options?: SearchOptions): Promise<import("../types").Response<APIWarLeagueList>>;
    /** Get info about a Clan War League. */
    getWarLeague(leagueId: number, options?: OverrideOptions): Promise<import("../types").Response<APIWarLeague>>;
    /** Get list of Locations. */
    getLocations(options?: SearchOptions): Promise<import("../types").Response<APILocationList>>;
    /** Get info about a Location. */
    getLocation(locationId: number, options?: OverrideOptions): Promise<import("../types").Response<APILocation>>;
    /** Get clan rankings for a specific location. */
    getClanRanks(locationId: number | string, options?: SearchOptions): Promise<import("../types").Response<APIClanRankingList>>;
    /** Get player rankings for a specific location. */
    getPlayerRanks(locationId: number | string, options?: SearchOptions): Promise<import("../types").Response<APIPlayerRankingList>>;
    /** Get clan versus rankings for a specific location. */
    getVersusClanRanks(locationId: number | string, options?: SearchOptions): Promise<import("../types").Response<APIClanVersusRankingList>>;
    /** Get player versus rankings for a specific location. */
    getVersusPlayerRanks(locationId: number | string, options?: SearchOptions): Promise<import("../types").Response<APIPlayerVersusRankingList>>;
    /** Get list of clan labels. */
    getClanLabels(options?: SearchOptions): Promise<import("../types").Response<APILabelList>>;
    /** Get list of player labels. */
    getPlayerLabels(options?: SearchOptions): Promise<import("../types").Response<APILabelList>>;
    /** Get info about gold pass season. */
    getGoldPassSeason(options?: OverrideOptions): Promise<import("../types").Response<APIGoldPassSeason>>;
}
